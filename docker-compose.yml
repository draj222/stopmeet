version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: stopmeet-db
    environment:
      POSTGRES_DB: stopmeet
      POSTGRES_USER: stopmeet
      POSTGRES_PASSWORD: stopmeet_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/schema.prisma:/docker-entrypoint-initdb.d/schema.prisma
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stopmeet"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stopmeet-backend
    environment:
      DATABASE_URL: "postgresql://stopmeet:stopmeet_password@postgres:5432/stopmeet"
      NODE_ENV: "production"
      PORT: 3001
      JWT_SECRET: "production-jwt-secret-key-change-this"
      FRONTEND_URL: "http://localhost:3000"
      ENCRYPTION_KEY: "production-32-char-encryption-key"
      RATE_LIMIT_MAX: 1000
      RATE_LIMIT_WINDOW_MS: 900000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: >
      sh -c "
        npm run db:migrate &&
        npm run start:prod
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stopmeet-frontend
    environment:
      REACT_APP_API_URL: "http://localhost:3001"
      REACT_APP_ENVIRONMENT: "production"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

  # Redis (for caching and background jobs)
  redis:
    image: redis:7-alpine
    container_name: stopmeet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: stopmeet-network 